//program1

#include<stdio.h>
#include<dirent.h>
#include<stdlib.h>
struct dirent *dptr;
int main(int argc,char *argv[])
{
char buff[100];
DIR *dirp;
printf("\n\n ENTER DIRECTORY NAME");
scanf("%s",buff);
if((dirp=opendir(buff))==NULL)
{
printf("the given directory does not exist");exit(1);
}
while(dptr=readdir(dirp))
{
printf("%s\n",dptr->d_name);
}
closedir(dirp);
}

//program2
#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
main()
{
int pid,pid1,pid2;
pid=fork();
if(pid==-1)
{
printf("error in process creation\n");
exit(1);
}
if (pid!=0)
{
pid1=getpid();
printf("\n the parent process ID is%d\n",pid1);
}
else
{
pid2=getpid();
printf("\n the child process ID is%d\n",pid2);
}
}


//program3

#include<stdio.h>
#include<string.h>
#define MAX 1024
void usage()
{
    printf("usage:\t./a.out filename word\n");
}
int main(int argc,char *argv[])
{
    FILE *fp;
    char fline[MAX];
    char *newline;
    int count=0;
    int occurences=0;
    if(argc!=3)
    {
        usage();
        exit(1);
    }
    if(!(fp=fopen(argv[1],"r")))
    {
        printf("grep:couldnot open file:%s\n",argv[1]);
        exit(1);
    }
    while(fgets(fline,MAX,fp)!=NULL)
    {
        count++;
        if(newline=strchr(fline, "\n"))
        *newline="\0";
        if(strstr(fline,argv[2])!=NULL)
        {
            printf("%s:%d%s\n",argv[1],count,fline);
            occurences++;
        }
    }
}

